Resources:
  CodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: <your-repo-discription>
      RepositoryName: <your-repo-name>
      Tags: 
       - Key: env
         Value: dev
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName: <your-bucket-name>
      Tags: 
       - Key: env
         Value: dev
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: S3
        Location: !Ref S3Bucket
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: <your-region>
          - Name: AWS_ACCOUNT_ID
            Value: <your-account-number>
          - Name: IMAGE_REPO_NAME
            Value: <your-ecr-repo-name>
          - Name: IMAGE_TAG
            Value: <your-image-tag>
      Source:
        Type: CODECOMMIT
        Location: !Join
          - ''
          - - 'https://git-codecommit.'
            - !Ref 'AWS::Region'
            - '.amazonaws.com/v1/repos/'
            - '<your-repo-name>'
      TimeoutInMinutes: 10
      Cache:
        Type: S3
        Location: <your-bucket-name>/build
      Tags: 
       - Key: env
         Value: dev
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 'ec2:CreateNetworkInterface'
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:DeleteNetworkInterface'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeSecurityGroups'
                - 'ec2:DescribeDhcpOptions'
                - 'ec2:DescribeVpcs'
                - 'ec2:CreateNetworkInterfacePermission'
                - 'codecommit:*'
                - 'codebuild:*'
                - 's3:*'
                Effect: Allow
                Resource: '*'
  MyRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: <your-ecr-name>
      Tags: 
       - Key: env
         Value: dev
Outputs:    
  Arn:
    Value: !GetAtt MyRepository.Arn
  Arn:
    Value: !GetAtt CodeBuildProject.Arn
  Url:
    Value: !GetAtt CodeCommitRepo.CloneUrlHttp
